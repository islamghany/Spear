@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    } // 600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (max-width: 112.5em) {
      @content;
    } //1800px
  }
  @if $breakpoint == hover {
    @media only screen and (hover: none) {
      @content;
    } // phones dose't have  hover => handle that here
  }
  @if $breakpoint == not-phone {
    @media only screen and (min-width: 37.5em) {
      @content;
    } //1800px
  } @else {
    @media only screen and (max-width: #{$breakpoint}) {
      @content;
    } //special case
  }
}

// ut
@mixin flex($justify: center, $align: center) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
}

@mixin message($headBg, $headCl, $contBg, $contCl) {
  border: 1px solid $headBg;
  .message__header {
    background: $headBg;
    color: $headCl;
  }
  .message__content {
    background: $contBg;
    color: $contCl;
  }
}

@keyframes wobble {
  from {
    transform: translate3d(0, 0, 0);
  }

  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}
.wobble {
  z-index: 1 !important;
  visibility: visible !important;
  .container__model {
    animation: wobble 0.6s ease;
  }
}

// Buttons
@mixin outlined($main, $secondary) {
  border: 1px solid #{$main}3b;
  color: $main;
  &:hover {
    background: $main;
    color: $secondary;
    box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2),
      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);
  }
}
@mixin contained($main, $secondary, $back) {
  border: none;
  color: $secondary;
  background: $main;
  box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2),
    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);
  &:hover {
    background: $back;
  }
}
@mixin iconed($main, $secondary, $back, $icon) {
  border: none;
  color: $secondary;
  background: $main;
  padding: 1.5rem 2rem;
  box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2),
    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);
  &:hover {
    background: $back;
  }
  margin-left: 3.3rem;
  border-radius: 0 4px 4px 0;
  &::before {
    content: $icon;
    font-family: "FontAwesome";
    background: $back;
    position: absolute;
    padding: 1.5rem 1rem;
    top: 0;
    font-size: 1.6rem;
    right: 100%;

    box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2),
      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);
    border-radius: 4px 0 0 4px;
  }
}

@mixin wave($main, $text) {
  padding: 1.5rem 4rem;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
  border: none;
  cursor: pointer;
  background-color: $main;
  color: $text;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
    background-color: $main;
  }
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    // &::after {
    //      transform: scaleX(1.4) scaleY(1.6);
    //      opacity: 0;
    //  }
  }

  &:active,
  &:focus {
    outline: none;
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  }
}
@mixin message($headBg, $headCl, $contBg, $contCl) {
  border: 1px solid $headBg;

  .message__header {
    background: $headBg;
    color: $headCl;
  }

  .message__content {
    background: $contBg;
    color: $contCl;
  }
}
@mixin shadow($main, $sub: $main) {
  padding: 1rem 2rem;
  color: $sub;
  border-radius: 10px;
  box-shadow: 6px 6px 0 0 $main;
  border: 2px solid $main;
  transition: all 0.3s;
  &:hover {
    transform: translate(6px, 6px);
    box-shadow: none;
  }
}

.heartbeat {
  animation: heartbeat 1.5s ease-in-out both;
}
@keyframes heartbeat {
  from {
    transform: scale(1);
    transform-origin: center center;
    animation-timing-function: ease-out;
  }
  10% {
    transform: scale(0.91);
    animation-timing-function: ease-in;
  }
  17% {
    transform: scale(0.98);
    animation-timing-function: ease-out;
  }
  33% {
    transform: scale(0.87);
    animation-timing-function: ease-in;
  }
  45% {
    transform: scale(1);
    animation-timing-function: ease-out;
  }
}

.scale {
  z-index: 1000000 !important;
  visibility: visible !important ;
  .model__body {
    animation: scale-in-center 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }
}
@keyframes scale-in-center {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
